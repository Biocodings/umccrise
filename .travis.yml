sudo: required

services:
  - docker
addons:
  apt:
    packages:
      - docker-ce


language: python
python:
  # We don't actually use the Travis Python (since we are on conda), but this keeps it organized.
  - "3.6"

before_install:
  # Temporal fix for networking problem: https://github.com/travis-ci/travis-ci/issues/1484
  - echo "127.0.1.1 "`hostname` | sudo tee /etc/hosts

  # The next couple lines fix a crash with multiprocessing on Travis and
  # are not specific to using Miniconda
  - sudo rm -rf /dev/shm
  - sudo ln -s /run/shm /dev/shm

  # Download the reference data
  - if [ ! -f $HOME/seq/GRCh37.fa ]; then
      wget -nv --no-check-certificate -c https://s3.amazonaws.com/biodata/genomes/GRCh37-seq.tar.gz ;
      tar -xzvpf GRCh37-seq.tar.gz --directory $HOME ;
      rm -f GRCh37-seq.tar.gz ;
      gunzip -c $HOME/seq/GRCh37.fa.gz > $HOME/seq/GRCh37.fa ;
      rm -f $HOME/seq/GRCh37.fa.gz ;
    fi

  # Cloning the test data
  - git clone https://github.com/umccr/umccrise_test_data tests/umccrise_test_data
  - ln -s $HOME/seq tests/umccrise_test_data/data/genomes/Hsapiens/GRCh37/seq


####################################################
## If you want to install miniconda from scratch: ##
####################################################
#install:
#  # Get and install anaconda (https://conda.io/docs/travis.html)
#  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
#  - bash miniconda.sh -b -p $HOME/miniconda
#  - export PATH=$HOME/miniconda/bin:$PATH
#  - hash -r
#  - conda config --set always_yes yes --set changeps1 no
#  - conda update -q conda
#  # Installing umccrise packages
#  - conda env create -n umccrise --file environment.yml
#  - source activate umccrise
#  # Useful for debugging any issues with conda
#  - conda info -a
#  # Installing the codebase (source code was automatically cloned into CWD by Travis)
#  - pip install -e .
#
#cache:
#  directories:
#  - $HOME/seq


######################################################
## If you want to pull cached miniconda and update: ##
######################################################
install:
  # Get and install anaconda (https://conda.io/docs/travis.html) and umccrise packages
  - if [ -d $HOME/miniconda ]; then echo "ls HOME/miniconda:" ; ls $HOME/miniconda ; fi ;
  - if [ ! -d $HOME/miniconda/bin ] ; then
      if [ -d $HOME/miniconda ] ; then rm -rf $HOME/miniconda ; fi ;
      wget -nv https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh ;
      bash miniconda.sh -b -p $HOME/miniconda ;
      export PATH=$HOME/miniconda/bin:$PATH ;
      hash -r ;
      conda config --set always_yes yes --set changeps1 no ;
      conda update -q conda ;
      conda env create -n umccrise --file environment.yml ;
    else
      export PATH=$HOME/miniconda/bin:$PATH ;
      echo "else ls HOME/miniconda:" ; ls $HOME/miniconda ;
      conda config --set always_yes yes --set changeps1 no ;
      conda env update -f environment.yml ;
    fi
  - source activate umccrise
  # Useful for debugging any issues with conda
  - conda info -a
  # Installing the codebase (source code was automatically cloned into CWD by Travis)
  - pip install -e .
  - R -e "library(devtools) ; options(unzip = '/usr/bin/unzip') ; devtools::install_github('umccr/rock')"

#cache:
#  directories:
#  - $HOME/seq
#  # - $HOME/miniconda
#  timeout: 600  # allow 10 minutes to cache instead of default 3 minutes

script:
  - nosetests --nocapture tests/test.py
  - docker version
  - docker build -t umccr/umccrise:latest -f Dockerfile .
  - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USER" --password-stdin
  - docker push umccr/umccrise:latest
  - docker build -t umccr/umccrise:withdata -f Dockerfile.withdata .
  - docker push umccr/umccrise:withdata

#notifications:
#  on_success: always
#  email: false
#  slack:
#    rooms:
