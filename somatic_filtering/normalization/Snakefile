import os
from somatic_filtering.utils import get_ref_path, get_sample_name
from somatic_filtering.normalization import make_normalize_cmd
from ngs_utils.file_utils import splitext_plus


ref_loc = get_ref_path()
ref = os.path.join(ref_loc, 'GRCh37/seq/GRCh37.fa')

vcf_file = 'test.vcf'
ref = 'test_ref.fa'


rule all:
    input:
        expand('norm/res/{sample}.vcf.gz', sample=[splitext_plus(vcf_file)[0]])


rule bgzip:
    input:
        '{sample}.vcf'
    output:
        'norm/work/{sample}.vcf.gz'
    priority: 1
    shell:
        'bgzip -c {input} > {output} && tabix -p vcf {output}'


rule copy:
    input:
        '{sample}.vcf.gz'
    output:
        'norm/work/{sample}.vcf.gz'
    shell:
        'ln -s {input} {output}'


rule normalize_vcf:
    input:
        vcf = 'norm/work/{sample}.vcf.gz',
        ref = ref
    output:
        'norm/res/{sample}.vcf.gz'     
    shell:
        make_normalize_cmd('{input.vcf}', '{output[0]}', '{input.ref}')


