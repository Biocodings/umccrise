""" UMCCR post-bcbio patient analysis workflow
"""
import os
import sys
from os.path import join, abspath, dirname, isfile, basename, splitext
from ngs_utils.file_utils import splitext_plus, verify_file, verify_dir, adjust_path
from ngs_utils.bcbio import BcbioProject
from ngs_utils.utils import flatten
from ngs_utils.logger import critical, info, debug, warn
from ngs_utils import logger as ngs_utils_logger
from hpc_utils import hpc
from ngs_utils.utils import set_locale; set_locale()
from umccrise import prep_inputs

shell.executable(os.environ.get('SHELL', 'bash'))
shell.prefix("")

within_sub_workflow = 'within_sub_workflow' in config
config['within_sub_workflow'] = 'yes'  # to avoid redundant logging in cluster sub-executions of the Snakefile

py_path = sys.executable  # /miniconda/envs/umccrise/bin/python
env_path = dirname(dirname(py_path))  # /miniconda/envs/umccrise
conda_cmd = 'export PATH=' + env_path + '_{}/bin:$PATH; '

run, batch_by_name = prep_inputs(config, silent=within_sub_workflow)
threads_per_batch = config['threads_per_batch']
threads_per_sample = config['threads_per_sample']

is_spartan = hpc.name == 'spartan'
is_raijin = hpc.name == 'raijin'
is_hpc = is_spartan or is_raijin
upload_proxy = ''
if is_spartan:
    upload_proxy = 'HTTPS_PROXY=http://wwwproxy.unimelb.edu.au:8000 '

upload_igv = is_hpc and config.get('upload_igv', 'no') == 'yes'


is_ffpe = False
if isinstance(run, BcbioProject):
    is_ffpe = run.somatic_caller == 'strelka2'


rule all:
    input: 'all.done'
    # A trick to avoid duplicating all input paths in the top "all" rule which has to be defined on top.


# TODO: try subworkflows here? http://snakemake.readthedocs.io/en/stable/snakefiles/modularization.html#sub-workflows
"""
subworkflow small_variants:
    workdir: 'small_variants'
    snakefile: 'Snakefile.small_variants'

rule all:
    input:  small_variants('all.done')
    output: ...
    shell:  ...
"""
# Or maybe it's not reasonable and not doable here since the input file is a phony .done, and also we depend on config in subworkflows


include: "small_variants.smk"
include: "structural.smk"
include: "purple.smk"
include: "coverage.smk"
include: "pcgr.smk"
include: "conpair.smk"
include: "oncoviruses.smk"
include: "microbiome.smk"
include: "rmd.smk"
include: "multiqc.smk"


localrules: umccrise


rule umccrise:
    input:  # Copy here inputs of the "milestone" rules (rules without output defined in the end of each Snakemake.* file)
        rules.coverage.output,
        rules.structural.output,
        rules.small_variants.output,
        rules.purple.output,
        rules.pcgr.output,
        rules.oncoviruses.output,
        rules.microbiome.output,
        rules.rmd.output,
        rules.multiqc.output,
    output:
        touch('all.done')
