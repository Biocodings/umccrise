"""
Somatic calls
-------------
Run ensemble and raw calls through PCGR and combine with the cnv calls.
"""
from umccrise import panel_of_normals


# PCGR struggles with anything but the basic chromosome setup.
# It also ignores any variant not marked `PASS` so might as well remove others to save on transfer times.
rule pcgr_somatic_vcf:
    input:
        rules.pon_pass.output[0]
    output:
        vcf = 'umccrised/{batch}/somatic/pcgr/somatic-ensemble-pon-pass-pcgr.vcf.gz',
        tbi = 'umccrised/{batch}/somatic/pcgr/somatic-ensemble-pon-pass-pcgr.vcf.gz.tbi'
    shell:
        'pcgr_prep {input} |'
        ' bcftools view -f.,PASS -t 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,X,Y -Oz -o {output.vcf}'
        ' && tabix -p vcf {output.vcf}'


# PCGR also wants a slightly different format for the CNS data:
rule pcgr_cns:
    input:
        lambda wc: join(batch_by_name[wc.batch].tumor.dirpath, f'{batch_by_name[wc.batch].name}-cnvkit.cns')
    output:
        'umccrised/{batch}/somatic/pcgr/somatic-cnvkit-pcgr.tsv'
    shell:
        'echo -e "Chromosome\\tStart\\tEnd\\tSegment_Mean" > {output} && cat {input} | grep -v ^chromosome | cut -f 1,2,3,5 >> {output}'


# Prepare it for submission to PCGR
rule pcgr_germline:
    input:
        vcf = rules.prep_germline.output[0]
    output:
        vcf = 'umccrised/{batch}/germline/pcgr/germline-ensemble-cancer-pcgr.vcf.gz',
        tbi = 'umccrised/{batch}/germline/pcgr/germline-ensemble-cancer-pcgr.vcf.gz.tbi'
    shell:
        'pcgr_prep {input.vcf} |'
        ' bcftools view -f.,PASS -t 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,X,Y -Oz -o {output.vcf}'
        ' && tabix -p vcf {output.vcf}'
# Can review the `.txt` file in Excel or submit the VCF to frameworks such as [gene.iobio](http://gene.iobio.io/).


from umccrise.patient_analysis import here as pa_source_dir
import uuid
unique_id = str(uuid.uuid4().hex[:6])

rule somatic_tar_gz:
    input:
        vcf = rules.pcgr_somatic_vcf.output.vcf,
        cns = rules.pcgr_cns.output[0],
        toml = join(pa_source_dir, 'pcgr', 'pcgr_configuration_somatic.toml')
    output:
        'umccrised/{batch}/somatic/pcgr/{batch}-' + unique_id + '-somatic.tar.gz'
    params:
        basedir = 'umccrised/{batch}/somatic/pcgr'
    shell:
        'tar -czf {output} -C {params.basedir} {input.vcf} {input.cns} {input.toml}'

rule germline_tar_gz:
    input:
        vcf = rules.pcgr_germline.output.vcf,
        toml = join(pa_source_dir, 'pcgr', 'pcgr_configuration_somatic.toml')
    output:
        'umccrised/{batch}/germline/pcgr/{batch}-' + unique_id + '-germline.tar.gz'
    params:
        basedir = 'umccrised/{batch}/germline/pcgr'
    shell:
        'tar -czf {output} -C {params.basedir} {input.vcf} {input.cns} {input.toml}'

rule upload_somatic_to_pcgr:
    input:
        rules.somatic_tar_gz.output[0]
    # params:
    #     url = f'ubuntu@{pcgr_url}.ap-southeast-2.compute.amazonaws.com',
    #     som_dir = 'umccrised/{batch}/somatic/pcgr',
    #     germ_dir = 'umccrised/{batch}/germline/pcgr',
    #     batch = lambda wc: wc.batch
    output:
        'umccrised/.snakemake/pcgr_{batch}_somatic.done'
    shell:
        'aws s3 cp {input} s3://umccr-pcgr && touch {output}'

rule upload_germline_to_pcgr:
    input:
        rules.germline_tar_gz.output[0]
    output:
        'umccrised/.snakemake/pcgr_{batch}_germline.done'
    shell:
        'aws s3 cp {input} s3://umccr-pcgr && touch {output}'

        
rule pcgr:
    input:
        expand(rules.pcgr_somatic_vcf.output, batch=batch_by_name.keys()),
        expand(rules.pcgr_cns.output, batch=batch_by_name.keys()),
        expand(rules.pcgr_germline.output, batch=batch_by_name.keys()),
        expand(rules.upload_germline_to_pcgr.output, batch=batch_by_name.keys()),
        expand(rules.upload_somatic_to_pcgr.output, batch=batch_by_name.keys())
    output:
        'umccrised/pcgr.done'
    shell:
        'touch {output}'
