
'''
Germline summary
----------------
# Take a single germline call set (or preferably the ensemble best practice calls, if generated) and annotate any events found in Sean's 105/106 cancer predisposition gene set.
# Note: need to store that cancer gene list somewhere. Happy to add to bcbio directly but then need source information.
'''

rule prep_germline:
    input:
        vcf = lambda wc: join(run.date_dir, batch_by_name[wc.batch].normal.name + '-ensemble-annotated.vcf.gz'),
        ensg = join(extras, 'cancer_genes_ENSG.txt')
    output:
        'umccrised/{batch}/germline/germline-ensemble-cancer.vcf.gz'
    params:
        ungz = lambda wc, output: get_ungz_gz(output[0])[0]
    shell:
        'zgrep ^# {input.vcf} > {params.ungz} && '
        'zgrep -f {input.ensg} {input.vcf} >> {params.ungz} && '
        'bgzip {params.ungz} && tabix {output}'

# Prepare it for submission to PCGR
rule pcgr_germline:
    input:
        vcf = rules.prep_germline.output[0]
    output:
        vcf = 'umccrised/{batch}/germline/pcgr/ensemble-cancer.vcf.gz',
        tbi = 'umccrised/{batch}/germline/pcgr/ensemble-cancer.vcf.gz.tbi'
    shell:
        'bcftools view -f .,PASS -r 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,X,Y {input.vcf} -Oz > {output.vcf}'
        ' && tabix -p vcf {output.vcf}'

# Can review the `.txt` file in Excel or submit the VCF to frameworks such as [gene.iobio](http://gene.iobio.io/). 


rule germline:
    input:
        expand(rules.pcgr_germline.output, batch=batch_by_name.values())
    output:
        'umccrised/.snakemake/germline.done'
    shell:
        'touch {output}'

